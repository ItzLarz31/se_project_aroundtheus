!function(){"use strict";class e{constructor(e,t,s,r,i){let{name:n,link:o,_id:a,isLiked:l}=e;this._name=n,this._link=o,this.id=a,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteConfirmation=r,this._handleLikeCard=i,this.isLiked=l}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeCard(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteConfirmation(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleLikeButton(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_handleDeleteButton(){this._handleDeletePopup.open(this.id)}deleteCard(){this._cardElement.remove(),this._cardElement=null}updateLikes(e){this.isLiked=e,this._handleLikeButton()}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._handleLikeButton(),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._borderErrorClass=e.borderErrorClass,this._setEventListeners()}_setEventListeners(){this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this._formElement.addEventListener("submit",(e=>{e.preventDefault()}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._borderErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass),t.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._borderErrorClass),t.textContent="",t.classList.remove(this._errorClass),t.classList.remove(this._inputErrorClass)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableButton(t):this._enableButton(t)}_hasInvalidInput(e){return[...this._inputElements].some((e=>!e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class r extends s{constructor(e,t,s){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._defaultSubmitButtonText=s,this._submitButton=this._popupForm.querySelector(".modal__save")}_getInputValues(){const e={};return this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._inputList.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){this._submitButton.textContent=e?"Saving...":this._defaultSubmitButtonText}reset(){this._popupForm.reset()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const n={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",borderErrorClass:"modal__input_border_error"},o=document.querySelector(".content").querySelector(".profile__edit-button"),a=(document.querySelector(".cards__list"),document.querySelector("#edit-modal")),l=a.querySelector(".modal__form"),d=a.querySelector("#profile-title-input"),c=a.querySelector("#profile-description-input"),u=document.querySelector("#profile-avatar-modal").querySelector(".modal__form"),h=document.querySelector(".profile__edit-picture-button"),_=(document.querySelector(".cards__list"),document.querySelector("#card-modal").querySelector(".modal__form")),m=document.querySelector(".profile__add-button"),p=new t(n,_);p.enableValidation();const E=new t(n,l);E.enableValidation();const v=new t(n,u);v.enableValidation();const b=new r("#card-modal",(function(e){let{title:t,url:s}=e;b.renderLoading(!0),g.addCard({name:t,link:s}).then((e=>{B(e),b.close(),b.reset(),p.disableButton()})).catch((e=>{console.error("Error adding card:",e)})).finally((()=>{b.renderLoading(!1)}))}),"Create");b.setEventListeners();const S=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupTitle=this._popupElement.querySelector(".modal__image-name")}open(e){let{link:t,name:s}=e;this._popupImage.src=t,this._popupTitle.textContent=s,this._popupImage.alt=s,super.open()}}("#image-modal");S.setEventListeners();const f=new r("#edit-modal",(function(e){let{name:t,description:s}=e;f.renderLoading(!0),g.updateProfileInfo({title:t,description:s}).then((()=>{C.setUserInfo({name:t,description:s}),E.disableButton(),f.close()})).catch((e=>{console.error("Error updating profile:",e)})).finally((()=>{f.renderLoading(!1)}))}),"Save");f.setEventListeners();const L=new r("#profile-avatar-modal",(function(e){L.renderLoading(!0);const t=e.url;g.updateAvatar({avatar:t}).then((()=>{C.setAvatarImage({avatar:t}),v.disableButton(),L.close(),L.reset()})).catch((e=>{console.error("Error updating avatar:",e)})).finally((()=>{L.renderLoading(!1)}))}),"Save");L.setEventListeners();const k=new class extends s{constructor(e){super({popupSelector:e}),this._submitButton=this._popupElement.querySelector(".modal__save"),this._handleSubmitCallback=null}setSubmitAction(e){this._handleSubmitCallback=e}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("click",(()=>{this._handleSubmitCallback()}))}}("#confirm-modal");k.setEventListeners();const C=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._job=document.querySelector(s),this._profileAvatar=document.querySelector(r)}getUserInfo(){return this._userData={name:this._name.textContent,description:this._job.textContent},this._userData}setUserInfo(e){let{name:t,description:s}=e;this._name.textContent=t,this._job.textContent=s}setAvatarImage(e){let{avatar:t}=e;this._profileAvatar.src=t}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__avatar"});document.getElementById("profile-image").src="106962b8f339c0d473bf.jpg";const g=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this.checkResponse)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers})}getProfileInfo(){return this._request(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers})}updateProfileInfo(e){let{title:t,description:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}addCard(e){let{name:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeCard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}dislikeCard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}updateAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f280bef9-8cb1-42f0-967f-b248aa62ce9e","Content-Type":"application/json"}});let y;function q(e,t){S.open({link:t,name:e})}function B(t){const s=new e(t,"#card-template",q,I,w).getView();y.addItem(s)}function I(e){k.open(),k.setSubmitAction((()=>{g.deleteCard(e.id).then((()=>{e.deleteCard(),k.close()})).catch((e=>{console.error("Error deleting card",e)}))}))}function w(e){e.isLiked?g.dislikeCard(e.id).then((()=>{e.updateLikes(!1)})).catch((e=>{console.error("Error disliking card",e)})):g.likeCard(e.id).then((()=>{e.updateLikes(!0)})).catch((e=>{console.error("Error liking card",e)}))}g.getInitialCards().then((e=>{y=new i({items:e,renderer:B},".cards__list"),y.renderItems()})).catch((e=>{console.error(e)})),g.getProfileInfo().then((e=>{C.setUserInfo({name:e.name,description:e.about}),C.setAvatarImage({avatar:e.avatar})})).catch((e=>{console.error(e)})),o.addEventListener("click",(()=>{f.open(),E.resetValidation();const{name:e,description:t}=C.getUserInfo();d.value=e,c.value=t})),m.addEventListener("click",(()=>{b.open(),p.resetValidation()})),h.addEventListener("click",(()=>{L.open(),v.resetValidation()})),k.setSubmitAction((e=>{handleDeleteConfirmation(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,